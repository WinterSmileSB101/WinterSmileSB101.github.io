{"meta":{"title":"WinterSmileSB101 的个人房间","subtitle":"胆小认生，不易相处","description":"成都工业学院14级，学习了各种后台技能，对前端也甚是抱有好感，准备再入坑前端。","author":"WinterSmileSB101","url":"http://WinterSmileSB101.online"},"pages":[{"title":"分类 categories","date":"2017-03-21T07:20:53.000Z","updated":"2017-03-21T11:27:39.000Z","comments":false,"path":"categories/index.html","permalink":"http://WinterSmileSB101.online/categories/index.html","excerpt":"","text":""},{"title":"关于我 about","date":"2017-03-21T11:07:31.000Z","updated":"2017-03-21T11:27:36.000Z","comments":true,"path":"about/index.html","permalink":"http://WinterSmileSB101.online/about/index.html","excerpt":"简历张孝波联系方式Email：891532752@qq.com OR zxb13194889618@outlook.com个人博客：http://WinterSmileSB101.online OR http://blog.csdn.net/qq_21265915GitHub： https://github.com/WinterSmileSB101专业技能熟悉Unity3D使用，有一定的C#经验熟悉JAVA的相关知识熟悉Android相关知识，4大组件都有了解以及能够使用能够使用第三方开源库到自己的项目中能够使用Git进行版本控制对一些前端流行框架有一定的了解","text":"简历张孝波联系方式Email：891532752@qq.com OR zxb13194889618@outlook.com个人博客：http://WinterSmileSB101.online OR http://blog.csdn.net/qq_21265915GitHub： https://github.com/WinterSmileSB101专业技能熟悉Unity3D使用，有一定的C#经验熟悉JAVA的相关知识熟悉Android相关知识，4大组件都有了解以及能够使用能够使用第三方开源库到自己的项目中能够使用Git进行版本控制对一些前端流行框架有一定的了解 教育背景2014/09–2018/07 成都工业学院 计算机工程学院 学士参与项目参与了学校的一个体质监测系统的开发（当时是做的Webservices后台）独立开发了几个小游戏独立开发了几款软件（部分暂时没有同步到Git）1.馨天气（一款天气App）2.馨拍（一款拍照软件）3.馨乐（一款音乐软件，UI部分是仿照网易云音乐）4.馨闻（一款新闻类APP）5.易希芸（一款查询购物类的APP–卖家端）6.漫吧（一款漫画APP，基于Android爬虫–自行写的爬虫代码，没有依赖框架）工作经历本人现在正在苦苦找寻实习工作中，希望有公司看到这里能够给我一次机会，谢谢。为什么选择我本人现在虽然暂无工作经验，但是有一定的专业知识积累，其他各方面的知识也有不少了解，而且热爱学习，积极向上，对编程学习有着极大的兴趣，能够积极的完成任务，能够独立或者合作的完成任务"},{"title":"标签 tags","date":"2017-03-21T07:17:32.000Z","updated":"2017-03-21T11:27:33.000Z","comments":false,"path":"tags/index.html","permalink":"http://WinterSmileSB101.online/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo 使用总结","slug":"summer-hexo","date":"2017-03-22T01:49:12.000Z","updated":"2017-03-22T02:03:04.582Z","comments":true,"path":"2017/03/22/summer-hexo/","link":"","permalink":"http://WinterSmileSB101.online/2017/03/22/summer-hexo/","excerpt":"","text":"1.在 md 文件中引入图片等资源md 中引入图片是可以通过相对地址的，所以为了引用到，可以生成一遍，然后把图片放到 public 文件夹下的需求位置，然后通过相对地址引用就好了，来个栗子，我们放了一张 test.png 到 public/img/ 下，那么相对地址是：1/img/test.png 其他资源同样如此使用，不过为了节约空间，建议保存图片到其他位置（比如网盘之类或者云服务器，毕竟Github pages 空间有限）。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/tags/Hexo/"},{"name":"总结","slug":"总结","permalink":"http://WinterSmileSB101.online/tags/总结/"}]},{"title":"Next 使用总结","slug":"summer-next","date":"2017-03-22T01:36:37.000Z","updated":"2017-03-22T01:52:00.837Z","comments":true,"path":"2017/03/22/summer-next/","link":"","permalink":"http://WinterSmileSB101.online/2017/03/22/summer-next/","excerpt":"","text":"1. Next 中的多级目录Next 是默认支持了多级目录的，那么要怎么设置呢？添加分类标签我就不说了，官方文档说的很清楚，我们创建（ hexo new summer_next）了一篇文章后,大概是这样子的12345---title: summer-nextdate: 2017-03-22 09:36:37tags:--- 默认并没有分类标签，我们想要实现把文章分类的话，就添加如下代码12categories: - Hexo 这样我们的文章就会被分类到 Hexo 类别下，那么如何实现多级分类呢？很简单，只需要在 Hexo （也就是你想要增加子分类的分类后），再写出分类，来个栗子1234categories: - Hexo- Next- 定制你的 Next 侧边栏 这样我们就实现了如下效果,多级菜单就实现了： 2. Next 中 Nest 动画背景这个很简单，直接打开 next/_config.yml 文件，找到 canvas ：false，然后改成 true 就好了。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/categories/Hexo/"},{"name":"Next","slug":"Hexo/Next","permalink":"http://WinterSmileSB101.online/categories/Hexo/Next/"}],"tags":[{"name":"总结","slug":"总结","permalink":"http://WinterSmileSB101.online/tags/总结/"},{"name":"Next","slug":"Next","permalink":"http://WinterSmileSB101.online/tags/Next/"}]},{"title":"定制你的 Next 侧边栏---定制社交链接","slug":"custom-your-next-sidebar","date":"2017-03-22T01:07:11.000Z","updated":"2017-03-22T01:34:43.468Z","comments":true,"path":"2017/03/22/custom-your-next-sidebar/","link":"","permalink":"http://WinterSmileSB101.online/2017/03/22/custom-your-next-sidebar/","excerpt":"","text":"Next 侧边栏文件的位置为（next/layout/_macro/sidebar.swig）实现自定义的社交这里有人就会觉得我是多事了，我确实是蛋疼，不仅蛋疼还胃疼，我直接按照 Next 上的主题配置社交模块，居然没有任何反应，作为一个才入坑的萌新，迫于无奈，只能使用笨法子来暴力解决了。还是看看症状图吧，服药前 服药后 下面说治病过程，打开侧边栏文件，找到如下位置（ 82 行）1234567891011121314&lt;div class=&quot;links-of-author motion-element&quot;&gt; &#123;% if theme.social %&#125; &#123;% for name, link in theme.social %&#125; &lt;span class=&quot;links-of-author-item&quot;&gt; &lt;a href=&quot;&#123;&#123; link &#125;&#125;&quot; target=&quot;_blank&quot; title=&quot;&#123;&#123; name &#125;&#125;&quot;&gt; &#123;% if theme.social_icons.enable %&#125; &lt;i class=&quot;fa fa-fw fa-&#123;&#123; theme.social_icons[name] | default(&apos;globe&apos;) | lower &#125;&#125;&quot;&gt;&lt;/i&gt; &#123;% endif %&#125; &#123;&#123; name &#125;&#125; &lt;/a&gt; &lt;/span&gt; &#123;% endfor %&#125; &#123;% endif %&#125; &lt;/div&gt; 可以看到这里是使用了遍历来生成我们的社交，但是不知为毛我的没有。所以就暴力一点。直接全部改成下面的样子123456789101112131415161718192021222324252627282930313233343536&lt;!--自己写的社交链接--&gt; &lt;div class=&quot;links-of-author motion-element&quot;&gt; &lt;span class=&quot;links-of-author-item&quot;&gt; &lt;a href=&quot;https://github.com/WinterSmileSB101&quot; title=&quot;Github&quot;&gt; &lt;i class=&quot;fa fa-fw fa-github fa-lg&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;/span&gt; &lt;span class=&quot;links-of-author-item&quot;&gt; &lt;a href=&quot;http://weibo.com/5602632941/profile?rightmod=1&amp;wvr=6&amp;mod=personinfo&amp;is_all=1&quot; title=&quot;微博&quot;&gt; &lt;i class=&quot;fa fa-fw fa-weibo fa-lg&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;/span&gt; &lt;span class=&quot;links-of-author-item&quot;&gt; &lt;a href=&quot;http://www.jianshu.com/users/73344bc7e890/timeline&quot; title=&quot;简书&quot;&gt; &lt;i class=&quot;fa fa-fw fa-bookmark fa-lg&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;/span&gt;&lt;br /&gt; &lt;span class=&quot;links-of-author-item&quot;&gt; &lt;a href=&quot;https://www.douban.com/people/159359470/&quot; title=&quot;豆瓣&quot;&gt; &lt;i class=&quot;fa fa-fw fa-newspaper-o fa-lg&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;/span&gt; &lt;span class=&quot;links-of-author-item&quot;&gt; &lt;a href=&quot;http://blog.csdn.net/qq_21265915&quot; title=&quot;CSDN博客&quot;&gt; &lt;i class=&quot;fa fa-fw fa-bug fa-lg&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;/span&gt; &lt;/div&gt; &lt;!--自己写的社交链接--&gt; 个人觉得这里条目也不多，就直接全部写出来了，懒得去搞那些花里胡哨的东西（懒癌症又犯了），把 href 中的换成对应你的链接就可以了，如果多了可以删除一些，少了可以增加一些，真是美滋滋。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/categories/Hexo/"},{"name":"Next","slug":"Hexo/Next","permalink":"http://WinterSmileSB101.online/categories/Hexo/Next/"},{"name":"定制你的 Next 侧边栏","slug":"Hexo/Next/定制你的-Next-侧边栏","permalink":"http://WinterSmileSB101.online/categories/Hexo/Next/定制你的-Next-侧边栏/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/tags/Hexo/"},{"name":"定制","slug":"定制","permalink":"http://WinterSmileSB101.online/tags/定制/"},{"name":"Next","slug":"Next","permalink":"http://WinterSmileSB101.online/tags/Next/"},{"name":"侧边栏","slug":"侧边栏","permalink":"http://WinterSmileSB101.online/tags/侧边栏/"}]},{"title":"为你的Hexo添加Nest动画","slug":"Next-Use-Nest","date":"2017-03-22T00:35:38.000Z","updated":"2017-03-22T01:04:56.054Z","comments":true,"path":"2017/03/22/Next-Use-Nest/","link":"","permalink":"http://WinterSmileSB101.online/2017/03/22/Next-Use-Nest/","excerpt":"","text":"如果你没有使用 Hexo 主题（或者主题中没有集合Nest）1.添加下列代码到你的布局文件中的 标签之前（位置/layout/layout.ejs）1&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; 2.在引用的同时可以对 Nest 进行相关的配置 color ： 线条颜色, 默认: ‘0,0,0’ ；三个数字分别为(R,G,B)，注意用,分割 opacity : 线条透明度（0~1）, 默认: 0.5 count : 线条的总数量, 默认: 150，（建议修改少点，否者 cpu 占用过高） zIndex : 背景的z-index属性，css属性用于控制所在层的位置, 默认: -13.举个栗子 1&lt;script type=&quot;text/javascript&quot; color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; 然后编译，提交，就大功告成 如果你使用集成了 Nest 的主题，就去主题配置中开启这里以 Next 主题为栗子（主题配置文件在 next/_config.yml,默认是false），找到12# Canvas-nestcanvas_nest: false 在文档的大概接近最下方的位置，把 false 修改成 ture，然后编译，提交，就大功告成","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/tags/Hexo/"},{"name":"动画","slug":"动画","permalink":"http://WinterSmileSB101.online/tags/动画/"},{"name":"Nest","slug":"Nest","permalink":"http://WinterSmileSB101.online/tags/Nest/"}]},{"title":"使用GitHubPages+Hexo+域名创建独立私有博客","slug":"CreatYourOwnWithGithubpages-and-Hexo","date":"2017-03-20T13:57:48.000Z","updated":"2017-03-22T01:53:19.949Z","comments":true,"path":"2017/03/20/CreatYourOwnWithGithubpages-and-Hexo/","link":"","permalink":"http://WinterSmileSB101.online/2017/03/20/CreatYourOwnWithGithubpages-and-Hexo/","excerpt":"","text":"使用GitHubPages+Hexo+域名创建自己的独立私有博客为什么要搭建独立私有博客？1.独立的才是最好的。2.可以使用免费的github控件来托管自己的博文。3.可以通过个性域名而不是绑定的二级域名。4.可以自由的定制自己博客的所有东西（所有的所有都可以自由定制，想想都激动啊）。搭建步骤1.安装Node.js- 绿色安装可以直接在网上下载绿色版的node.js，这样就可以不用安装了，但是需要自己配置环境变量，然后通过cmd中键入node来进入node.js- 下载node.js中文网官网下载图例：1.英文官网 2.中文官网 - 安装过程基本一路next，你也可以改变安装的位置，安装位置默认是在C盘。 安装完成后我们可以通过cmd键入node来进入node.js或者直接通过开始菜单中node.js文件夹下的node.js command prompt 来直接进入node.js交互模式，如下图 2.更改NPM源国外的NPM源并不稳定，即使翻墙也不一定能将Hexo下载下来，所以这里直接更改为淘宝源。1$ npm config set registry https://registry.npm.taobao.org npm info underscore 3.安装Hexo这里安装的是hexo最新版本，如果想安装以前的的版本请运行命令1$ npm install -g hexo 4.快速开始- Hexo 文档这里再贴上Hexo的文档，想研究的可以看看Hexo中文文档- 建立Hexo工程1$ hexo init blog 上述命令的意思为在当前命令目录创建一个名为blog的文件夹来作为工程的根目录，想要在其他地方创建可以直接cd到那个位置然后再运行上诉命令（这里blog也是可以随便你定义的）输入命令后会是一顿加载过程，不用管，你现在可以去喝口水或者休息一下眼睛。等一会再回来应该就会看到如下界面(由于输出太多中间我就省略了) 好那么现在我们的工程初始化就算完成了。- 新建一个md文档这里就需要两步了，先需要进入工程文件夹1$ cd blog 先来看看如果不进入的话会出现什么情况 现在看看正确的情况 然后我们创建md文档文件–当然是老套路，一言不合就HelloWorld，此时会在/blog/sources/_post/目录下生成HelloWorld.md文件。1$ hexo new &quot;HelloWorld&quot; 这里的”HelloWorld”是文件的名称，也是我们的文章标题的名称，可以自由定义- 把我们建立的md文件交付Hexo生成静态网页文件使用Hexo引擎将Markdown格式的文件解析成可以使用浏览器查看的HTML文件，HTML文件存储在blog/public目录下。命令如下1$ hexo generate 或者简化的写法1$ hexo g 结果如下 - 运行Hexo 服务器1$ hexo server 打开命令行提示的地址，一般是http://0.0.0.0:4000/，或者是http://localhost:4000,既可以看到我们的Hexo网站。如果提示找不到server命令则需要运行命令1$ npm install hexo-server--save Hexo3.0之后把server独立出来了，所以需要单独安装。运行命令后,可以看到这里我们的服务器地址是http://localhost:4000/ 现在访问http://loaclhost:4000/，可以看到我们所写的文章已经提交到Hexo服务器上了 以后新建文件同理，修改了内容之后需要先生成静态网页文件再启动服务器。- Hexo 安装主题安装主题需要从Git上克隆，Hexo提供了默认主题landscape。如果想要使用别人的主题则需要用到Git工具。Windows用户和Mac用户安装Git都比较简单，Windows用户登录git官网下载软件安装，Mac用户只需在命令行中键入Git命令就会自动提示安装（详细安装教程请移步Git）。安装完成后打开命令行工具（Windows用户打开开始菜单Git目录下的Git Bash）。或者直接在你的Hexo工程的根文件夹打开cmd键入如下命令（这里以yilia主题为例，Git地址）1$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 修改配置修改hexo工程根目录下的 _config.yml ： theme: yiliaHexo 更新主题12$ cd themes/yilia$ git pull 具体yilia主题配置请移步Git地址- 附上一些 Hexo 主题地址yilia知乎：好看的 Hexo 主题排行下面我们就要把 Hexo 的静态网页上传到GitHub pages上去- 申请GitHub账号已经有的同学可以无视首先进入网站 GitHub然后点击右上角的 sign up 进入注册界面，如下 输入你的用户名（不能改，而且只能有一个），其他的就和一般的注册没啥两样。必要：GitHub的邮箱必须要绑定且验证，要不然没有免费静态空间—应该是这样的，Git具体配置注册帐号以及验证完成后，登录Github点击右上角 + 号，点击 New Repository（新建仓库）如下图 进入新建仓库界面，这里是重点，仓库的名称必须是 yourusername.github.io,这里 yourusername 就是你注册时候的 username 必须严格按照这种命名方式，否者是不能通关过 yourusername.github.io 访问到此页面的，具体如下图,其中 youruesrname 就是前面的 owner 单用户的时候可以直接这样看，多用户时注意区别，由于我已经创建了 WinterSmileSB101.github.io 所以他提示已经存在，你在确定输入无误之后就点击3的位置，其他的东西你也可以进行配置，不配置也无所谓。 下面在浏览器中输入WinterSmileSB101.github.io ,由于这里我已经搭建完成所以效果如下： 现在就要把我们的静态网页文件通过 Hexo 上传到 Github 上我们的个人主页上了在工程目录安装 deployer-git 命令如下1$ npm install hexo-deployer-git --save 在/blog/_config.yml中修改deploy属性(注意:之后有空格，否则出错)1234deploy: type: git repository: https://github.com/WinterSmileSB101/WinterSmileSB101.github.io.git branch: master 把repository： 后的换成你自己的 Git 仓库地址如何找到自己的Git项目地址(如果直接进入项目主界面看不到链接，就按下图顺序操作) 这里使用的是 http 方式提交到Git，可能会频繁的要求输入帐号以及密码，嫌麻烦可以通过SSH的方式提交然后再通过下面命令提交代码到Git12$ hexo generate$ hexo deploy 以后有修改的话就依次运行上面代码提交Git，就可以了这里可能在运行 hexo deploy 的时候出现如下问题1error deployer not found:github 有几种方式解决这个问题- 注意 type 的值： hexo 更新到3.0之后，deploy的type 的github需要改成git- 解决方法：npm install hexo-deployer-git –save 改了之后执行，然后再部署，就可以了恭喜你，现在你已经拥有一个自己的私有博客了！下面是域名申请与绑定，不想使用个人域名的就可以不用接着往下再看了。- 使用域名来访问你的 Hexo申请域名申请域名有几种方式，比如腾讯云、阿里云（推荐）、GoDaddy 等等。这里我用 阿里云 为例子先登录，这里可以直接通过淘宝帐号登录阿里云然后1234graph LR点击产品--&gt;域名注册域名注册--&gt;在搜索框里输入你想注册的域名在搜索框里输入你想注册的域名--&gt;点击查询 过程如下图 我们可以看到，这里就检查出了域名是否被注册，选择没被注册的加入清单然后去结算就好了。 绑定域名到yourusername.github.io打开你的 Hexo 项目文件夹，进入source文件夹，并新建文本文档名为 CNAME（注意没有后缀名），如下图 然后通过记事本打开 CNAME 文件，输入你购买的域名并且保存，如下图 我们还需要解析域名12graph LR进入控制台--&gt;点击左侧域名 出现如下,然后点击解析 进入域名解析界面,点击添加解析，然后会提示验证，验证即可 这里的记录类型我们选择 CNAME主机记录可以不用管记录值填写前面的 yourusername.github.io，如下 记录类型选择 A 的话 记录值就要填写通过 cmd ping yourusername.github.io 所得出的IP地址。如下（红圈的部分即为 IP 地址） 然后点击保存，这时候你又可以去休息一下了，因为这个修改会有 1 - 几分钟左右的缓存时间，也就是可能不会马上生效。休息完了回来，打开浏览器，输入你的域名，比如我这里申请的是WinterSmileSB101.online，见证奇迹的时刻来了， 别急，还没按下 Enter 呢OK 看到这里相信你已经搭建好了自己的独立私有博客了，接下来就去丰富它吧Hexo 生成的是 md 文件（markDown文件），一种很强大的标记语言，使用她我们能简单的控制格式，简单的做出各种专业图等等，具体使用方式MarkDown中文文档以及一些 markDown 编辑器1.好用的 markDown 编辑器2.有道云笔记3.七款优秀的 markDown 编辑器","categories":[{"name":"程序猿","slug":"程序猿","permalink":"http://WinterSmileSB101.online/categories/程序猿/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://WinterSmileSB101.online/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"http://WinterSmileSB101.online/tags/Hexo/"},{"name":"独立博客","slug":"独立博客","permalink":"http://WinterSmileSB101.online/tags/独立博客/"}]}]}